#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2013-2023 Tearran tearran@g...l.c.m
# shellcheck disable=SC2034,SC2154,SC2044

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
filename="$(basename "${BASH_SOURCE[0]}")"

# Check if the script is already in the working directory
if [ "$script_dir" != "$current_dir" ]; then
    echo "Changing to working directory: $script_dir"
    cd "$script_dir" || exit 1
    # shellcheck source=/dev/null
    source ./lib/functions/cli/commands.sh
elif [ "$script_dir" == "$current_dir" ]; then
    # shellcheck source=/dev/null
    source ./lib/functions/cli/commands.sh
else
	echo "Error: Uknown "
fi

# Call the array
armbian_register_commands

# Placeholder filler for tests
filler_doc() {

    # Set Foreground RED
    clear && echo -e "\e[31m"

	# HERE DOC
    cat << EOF
          █ █ █ █ █ █ █ █ █ █ █
         ███████████████████████
       ▄▄██                   ██▄▄
       ▄▄██    ███████████    ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██   █████████████   ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██   ██         ██   ██▄▄
       ▄▄██                   ██▄▄
         ███████████████████████
          █ █ █ █ █ █ █ █ █ █ █
     Welcome to armbian-build system
EOF

    # Set Foreground Default
    echo -e "\e[0m"
}

# Display HANDLERS message
if [ "$1" == "-H" ]; then
    echo "ARMBIAN_COMMANDS_TO_HANDLERS_DICT:"
    for key in "${!ARMBIAN_COMMANDS_TO_HANDLERS_DICT[@]}"; do
        echo "$key -> ${ARMBIAN_COMMANDS_TO_HANDLERS_DICT[$key]}"
    done
# Display VAR
elif [ "$1" == "-V" ]; then
    echo -e "\nARMBIAN_COMMANDS_TO_VARS_DICT:"
    for key in "${!ARMBIAN_COMMANDS_TO_VARS_DICT[@]}"; do
        echo "$key -> ${ARMBIAN_COMMANDS_TO_VARS_DICT[$key]}"
    done
# Display all avalible.
elif [[ "$1" == "-a"  || "$1" == "-a" ]] ; then
    filler_doc
	echo -e "\nUsage: ${filename} [ TODO: uknown ]"
    echo -e "\nARMBIAN_COMMANDS_TO_HANDLERS_DICT:\n"
    for key in "${!ARMBIAN_COMMANDS_TO_HANDLERS_DICT[@]}"; do
        echo "$key -> ${ARMBIAN_COMMANDS_TO_HANDLERS_DICT[$key]}"
    done
        echo -e "\nARMBIAN_COMMANDS_TO_VARS_DICT:\n"
    for key in "${!ARMBIAN_COMMANDS_TO_VARS_DICT[@]}"; do
        echo -e "$key -> ${ARMBIAN_COMMANDS_TO_VARS_DICT[$key]}"
    done

# Main Help Message
elif [ "$1" == "-h" ]; then
    filler_doc # ACII LOGO
    # HERE DOC for self-help
    cat << EOF
Usage: "${filename}" [ -h | -H | -V | -a ]

  -h      This is a help message for this script.
  -a      Display Arrays data
  -H      Display HANDLERS
  -V      Display VARS

EOF

# Otherwise pass options to ./compile.sh
else
    # Pass args to ./compile.sh
    bash "./compile.sh" "$@"

fi
